.site-header {
  padding: 20px 0;
  position: absolute;
  width: 100%;
  z-index: 2;
  transition: background-color .3s ease-out;
  &--is-expanded {
    background-color: rgba($mainBlue, 0.55);
  }
  @mixin atMedium {
    /* using npm's "postcss-hexrgba" enables variables support */
    background-color: rgba($mainBlue, 0.30);
    position: fixed;
    &--dark {
      background-color: rgba(23, 51, 72, 0.85);
    }
  }
  &__button-container {
    @mixin atMedium {
      float: right;
    }
    a {
      display: inline-block;
    }
  }
  &__logo {
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%) scale(.8);
    transition: transform .3s ease-out;
    transform-origin: 50% 0%;
    background-color: $mainBlue;
    padding: 25px 36px;

    @mixin atMedium {
      position: absolute;
      left: auto;
      transform: none;

      .site-header--dark & {
         transform: scale(.73);
      }
    }
  }
  /*&__logo {
  position: absolute;
  top: 0;
  background-color: $mainBlue;
  padding: 25px 36px;
}
*/
  &__logo__graphic {
    text-indent: -9999px;
  }
  &__menu-icon {
    width: 20px;
    height: 19px;
    position: absolute;
    top: 10px;
    right: 10px;
    z-index: 10;

    @mixin atMedium {
      display: none;
    }
    &::before {
      content: "";
      position: absolute;
      top: 0px;
      left: 0px;
      width: 20px;
      height: 3px;
      background-color: #fff;
      transform-origin: 0 0;
      transition: transform .3s ease-out;
    }
    &__middle {
      position: absolute;
      top: 8px;
      left: 0px;
      width: 20px;
      height: 3px;
      background-color: #fff;
      transition: all .3s ease-out;
      transform-origin: 0 50%;
    }
    &::after {
      content: "";
      position: absolute;
      bottom: 0px;
      left: 0px;
      width: 20px;
      height: 3px;
      background-color: #fff;
      transform-origin: 0 100%;
      transition: transform .3s ease-out;
    }
  }


  &__menu-icon--close-x {
    &::before {
      transform: rotate(45deg) scaleX(1.25);
    }
/* Using the "&" here would attribute it to "--close-x". Instead use old fashioned class selector */
    .site-header__menu-icon__middle {
      /*display: none;  >> use opacity: 0 instead â€¦*/
      opacity: 0;
      transform: scaleX(0);
    }
    &::after {
      transform: rotate(-45deg) scaleX(1.25) translateY(1px);
    }

  }
  &__menu-content {
    opacity: 0;
    transform: scale(1.2);
    transition: all .3s ease-out;
    /* Since we went from 'display: none' to 'opacity: 0'
we must set a z-index of -10 or more to avoid users
accidentally clicking invisible content

+ note that z-index also demands position: relative;
for the browser to acknowledge the z-index value */
    z-index: -10;
    position: relative;
    padding-top: 90px;
    text-align: center;
    @mixin atMedium {
      opacity: 1;
      z-index: 1;
      padding-top: 0px;
      transform: scale(1);
    }
    &--is-visible {
      opacity: 1;
      z-index: 1;
      transform: scale(1);
    }
  }
}
